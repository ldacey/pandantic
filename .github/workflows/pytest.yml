name: pre-commit
on: [push]
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # Cache the installation of Poetry itself, e.g. the next step. This prevents the workflow
    # from installing Poetry every time, which can be slow. Note the use of the Poetry version
    # number in the cache key, and the "-0" suffix: this allows you to invalidate the cache
    # manually if/when you want to upgrade Poetry, or if something goes wrong. This could be
    # mildly cleaner by using an environment variable, but I don't really care.
    - name: cache poetry install
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-0

    # Install Poetry. You could do this manually, or there are several actions that do this.
    # `snok/install-poetry` seems to be minimal yet complete, and really just calls out to
    # Poetry's default install script, which feels correct. I pin the Poetry version here
    # because Poetry does occasionally change APIs between versions and I don't want my
    # actions to break if it does.
    #
    # The key configuration value here is `virtualenvs-in-project: true`: this creates the
    # venv as a `.venv` in your testing directory, which allows the next step to easily
    # cache it.
    - uses: snok/install-poetry@v1

    - name: Install project
      run: poetry install

    - name: Run pytest tests
      run: poetry run pytest tests
